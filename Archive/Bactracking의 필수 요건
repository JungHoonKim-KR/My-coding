백트래킹 문제를 풀 때마다 항상 같은 코드에서 막힌다.
public ... dfs(){

  arr[i]++;
  dfs(i+1);
  arr[i]--;
바로 6번줄

항상 같은 의문을 가진다. "왜 더해놓고 또 빼는거야?" 그리고 결론은 항상 같았다.
이 이후로 적어도 같은 코드에서 또 막히는 일이 없었으면 좋겠다.

arr의 요소를 통해 무언가를 얻기 위해 차근차근 경우의 수를 따지는 과정이 백트래킹이라고 할 수 있다.
base인 dfs(0)을 시작으로 breakpoint인 dfs(N)까지 재귀가 실행된다.
항상 명심해야 하는건 백트래킹은 가지치기라는 것. 경우의 수를 따지는 과정이라는 것.
우리가 0부터 N까지 재귀를 한 후 
if(i==N)
  return;
 이 코드가 실행된다.
 여기서 핵심은 dfs(N)이 return;된 후 어떻게 되느냐인데
 재귀를 생각하면 그 전 부모 메소드로 돌아간다는걸 알 수 있다.
 내가 항상 하는 의문은 "돌아가는건 알겠는데 왜 돌아가기 전에 ++한걸 다시 -- 하지???" 이다.
 
 자. 생각해봐라.
 dfs(N)을 호출하기 전 나는 arr[i]++을 했을 것이고. 우리가 가진 경우의 수 중 case1을 완수한 것이다.
 그 다음 어떻게 해야겠는가?
 case2를 위한 준비를 해야한다.
 그럼 case1에서 한 일을 되돌려야 하지 않겠는가?
 쉽게 생각해보면 경우의 수 n개 중에 첫번째 경우의 수를 실험한 후 두번쨰 실험을 하기 위해 세팅을 복구하는 것과 같다.
 이것이 백트래킹의 핵심이다.
 근데 사실 문제의 카테고리가 백트래킹이라서 이렇게 풀어야겠다 싶은거지 아무 설정 없이 문제만 있으면 어떻게 풀어야 할지 참 막막하다.
