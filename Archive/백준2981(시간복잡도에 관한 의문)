수학문제를 푸는 느낌을 받았다. 머리로만 풀려고 하면 어떻게 시간을 줄여야 할지 막막할 것이다.
n개의 숫자의 나머지를 같게 할 특정 숫자M을 찾는것 
즉 
a%M=r
b%M=r
c%M=r  
-> a%M=b%M
->(a-b)%M=(b-c)%M 라는 식이 성립한다
이 알고리즘과 유클리드 호재법을 이용하여 공약수 M을 찾으면 된다.
M은 수가 그리 크지 않을테니 for문을 이용해 하나씩 찾아봐도 시간복잡도 역시 여유있다.

여기서 궁금한건 
public static int gcd(int a,int b){
       while(b!=0){
           int r=a%b;
           a=b;
           b=r;

        }
        return a;
    }
이 식 보다
   public static int gcd(int a,int b){
        int max=Math.max(a,b);
        int min=Math.min(a,b);
       while(max%min!=0){
           int r=max%min;
           max=min;
           min=r;

        }
        return min;
    }
    이 식의 메모리 크기와 시간이 더 적게 나왔다.
    분명 몇 줄 더 쓰기도 했고 특별한 메소드를 사용한 것도 아닌데 왜 그런걸까? 
